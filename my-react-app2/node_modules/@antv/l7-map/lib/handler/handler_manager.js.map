{"version":3,"sources":["../../src/handler/handler_manager.ts"],"names":["isMoving","p","zoom","drag","pitch","rotate","hasChange","result","panDelta","mag","zoomDelta","bearingDelta","pitchDelta","HandlerManager","map","options","e","handleEvent","type","eventName","stop","updatingCamera","inputEvent","undefined","mergedIHandlerResult","needsRenderFrame","eventsInProgress","activeHandlers","mapTouches","touches","getMapTouches","points","DOM","touchPos","el","mousePos","handlers","handlerName","handler","allowed","isEnabled","data","blockedByActive","reset","handerName","mergeIHandlerResult","triggerRenderFrame","isActive","deactivatedHandlers","name","previousActiveHandlers","Object","keys","length","changes","push","cameraAnimation","inertia","clear","fireEvents","getCanvasContainer","handlersById","HandlerInertia","bearingSnap","addDefaultHandlers","listeners","passive","window","document","capture","target","listenerOptions","addEventListener","handleWindowEvent","removeEventListener","scrollZoom","isZooming","Boolean","HandlerResult","eventData","originalEvent","frameId","requestRenderFrame","timeStamp","RenderFrameEvent","applyChanges","add","MapEventHandler","boxZoom","BoxZoomHandler","tapZoom","TapZoomHandler","clickZoom","ClickZoomHandler","doubleClickZoom","DoubleClickZoomHandler","tapDragZoom","TapDragZoomHandler","touchPitch","TouchPitchHandler","mouseRotate","MouseRotateHandler","mousePitch","MousePitchHandler","dragRotate","DragRotateHandler","mousePan","MousePanHandler","touchPan","TouchPanHandler","dragPan","DragPanHandler","touchRotate","TouchRotateHandler","touchZoom","TouchZoomHandler","touchZoomRotate","TouchZoomRotateHandler","ScrollZoomHandler","keyboard","KeyboardHandler","BlockableMapEventHandler","interactive","enable","myName","indexOf","t","contains","combined","combinedEventsInProgress","combinedDeactivatedHandlers","change","Point","_add","around","pinchAround","noInertia","updateMapTransform","combinedResult","tr","transform","centerPoint","loc","pointLocation","sub","bearing","setLocationAtPoint","update","record","newEventsInProgress","wasMoving","nowMoving","startEvents","fireEvent","bearingChanged","endEvents","originalEndEvent","stillMoving","inertialEase","onMoveEnd","inertiaOptions","shouldSnapToNorth","getBearing","easeTo","emit","Event","resetNorth"],"mappings":"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","sourcesContent":["// @ts-ignore\n// tslint:disable-next-line: no-submodule-imports\nimport merge from 'lodash/merge';\nimport Point from '../geo/point';\nimport { Map } from '../map';\nimport DOM from '../utils/dom';\nimport BlockableMapEventHandler from './blockable_map_event';\nimport BoxZoomHandler from './box_zoom';\nimport ClickZoomHandler from './click_zoom';\nimport { Event } from './events/event';\nimport RenderFrameEvent from './events/render_event';\nimport HandlerInertia from './handler_inertia';\nimport { IHandler, IHandlerResult } from './IHandler';\nimport KeyboardHandler from './keyboard';\nimport MapEventHandler from './map_event';\nimport {\n  MousePanHandler,\n  MousePitchHandler,\n  MouseRotateHandler,\n} from './mouse';\nimport ScrollZoomHandler from './scroll_zoom';\nimport DoubleClickZoomHandler from './shim/dblclick_zoom';\nimport DragPanHandler from './shim/drag_pan';\nimport DragRotateHandler from './shim/drag_rotate';\nimport TouchZoomRotateHandler from './shim/touch_zoom_rotate';\nimport TapDragZoomHandler from './tap/tap_drag_zoom';\nimport TapZoomHandler from './tap/tap_zoom';\nimport {\n  TouchPanHandler,\n  TouchPitchHandler,\n  TouchRotateHandler,\n  TouchZoomHandler,\n} from './touch';\n\nexport type InputEvent = MouseEvent | TouchEvent | KeyboardEvent | WheelEvent;\n\nconst isMoving = (p: any) => p.zoom || p.drag || p.pitch || p.rotate;\n\nfunction hasChange(result: IHandlerResult) {\n  return (\n    (result.panDelta && result.panDelta.mag()) ||\n    result.zoomDelta ||\n    result.bearingDelta ||\n    result.pitchDelta\n  );\n}\n\nexport interface IHandlerOptions {\n  interactive: boolean;\n  boxZoom: boolean;\n  dragRotate: boolean;\n  dragPan: boolean;\n  keyboard: boolean;\n  doubleClickZoom: boolean;\n  touchZoomRotate: boolean;\n  touchPitch: boolean;\n  trackResize: boolean;\n  renderWorldCopies: boolean;\n  bearingSnap: number;\n  clickTolerance: number;\n  pitchWithRotate: boolean;\n}\n\nclass HandlerManager {\n  private map: Map;\n  private el: HTMLElement;\n  private handlers: Array<{\n    handlerName: string;\n    handler: IHandler;\n    allowed: any;\n  }>;\n  private eventsInProgress: any;\n  private frameId: number;\n  private inertia: HandlerInertia;\n  private bearingSnap: number;\n  private handlersById: { [key: string]: IHandler };\n  private updatingCamera: boolean;\n  private changes: Array<[IHandlerResult, any, any]>;\n  private previousActiveHandlers: { [key: string]: IHandler };\n  private bearingChanged: boolean;\n  private listeners: Array<\n    [HTMLElement, string, void | { passive?: boolean; capture?: boolean }]\n  >;\n\n  constructor(map: Map, options: IHandlerOptions) {\n    this.map = map;\n    this.el = this.map.getCanvasContainer();\n    this.handlers = [];\n    this.handlersById = {};\n    this.changes = [];\n\n    this.inertia = new HandlerInertia(map);\n    this.bearingSnap = options.bearingSnap;\n    this.previousActiveHandlers = {};\n\n    // Track whether map is currently moving, to compute start/move/end events\n    this.eventsInProgress = {};\n\n    this.addDefaultHandlers(options);\n\n    const el = this.el;\n\n    this.listeners = [\n      // Bind touchstart and touchmove with passive: false because, even though\n      // they only fire a map events and therefore could theoretically be\n      // passive, binding with passive: true causes iOS not to respect\n      // e.preventDefault() in _other_ handlers, even if they are non-passive\n      // (see https://bugs.webkit.org/show_bug.cgi?id=184251)\n      [el, 'touchstart', { passive: false }],\n      [el, 'touchmove', { passive: false }],\n      [el, 'touchend', undefined],\n      [el, 'touchcancel', undefined],\n\n      [el, 'mousedown', undefined],\n      [el, 'mousemove', undefined],\n      [el, 'mouseup', undefined],\n\n      // Bind window-level event listeners for move and up/end events. In the absence of\n      // the pointer capture API, which is not supported by all necessary platforms,\n      // window-level event listeners give us the best shot at capturing events that\n      // fall outside the map canvas element. Use `{capture: true}` for the move event\n      // to prevent map move events from being fired during a drag.\n      // @ts-ignore\n      [window.document, 'mousemove', { capture: true }],\n      // @ts-ignore\n      [window.document, 'mouseup', undefined],\n\n      [el, 'mouseover', undefined],\n      [el, 'mouseout', undefined],\n      [el, 'dblclick', undefined],\n      [el, 'click', undefined],\n\n      [el, 'keydown', { capture: false }],\n      [el, 'keyup', undefined],\n\n      [el, 'wheel', { passive: false }],\n      [el, 'contextmenu', undefined],\n      // @ts-ignore\n      [window, 'blur', undefined],\n    ];\n    for (const [target, type, listenerOptions] of this.listeners) {\n      // @ts-ignore\n      DOM.addEventListener(\n        target,\n        type,\n        // @ts-ignore\n        target === window.document ? this.handleWindowEvent : this.handleEvent,\n        listenerOptions,\n      );\n    }\n  }\n  public destroy() {\n    for (const [target, type, listenerOptions] of this.listeners) {\n      // @ts-ignore\n      DOM.removeEventListener(\n        target,\n        type,\n        // @ts-ignore\n        target === window.document ? this.handleWindowEvent : this.handleEvent,\n        listenerOptions,\n      );\n    }\n  }\n\n  public stop() {\n    // do nothing if this method was triggered by a gesture update\n    if (this.updatingCamera) {\n      return;\n    }\n\n    for (const { handler } of this.handlers) {\n      handler.reset();\n    }\n    this.inertia.clear();\n    this.fireEvents({}, {});\n    this.changes = [];\n  }\n\n  public isActive() {\n    for (const { handler } of this.handlers) {\n      if (handler.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public isZooming() {\n    return !!this.eventsInProgress.zoom || this.map.scrollZoom.isZooming();\n  }\n  public isRotating() {\n    return !!this.eventsInProgress.rotate;\n  }\n\n  public isMoving() {\n    return Boolean(isMoving(this.eventsInProgress)) || this.isZooming();\n  }\n\n  public handleWindowEvent = (e: InputEvent) => {\n    this.handleEvent(e, `${e.type}Window`);\n  };\n\n  public handleEvent = (\n    e: InputEvent | RenderFrameEvent,\n    eventName?: string,\n  ) => {\n    if (e.type === 'blur') {\n      this.stop();\n      return;\n    }\n    this.updatingCamera = true;\n    const inputEvent = e.type === 'renderFrame' ? undefined : (e as InputEvent);\n\n    /*\n     * We don't call e.preventDefault() for any events by default.\n     * Handlers are responsible for calling it where necessary.\n     */\n\n    const mergedIHandlerResult: IHandlerResult = { needsRenderFrame: false };\n    const eventsInProgress: { [key: string]: any } = {};\n    const activeHandlers: { [key: string]: any } = {};\n    // @ts-ignore\n    const mapTouches = e.touches\n      ? // @ts-ignore\n        this.getMapTouches(e.touches as Touch[])\n      : undefined;\n    const points = mapTouches\n      ? DOM.touchPos(this.el, mapTouches)\n      : DOM.mousePos(this.el, e as MouseEvent);\n\n    for (const { handlerName, handler, allowed } of this.handlers) {\n      if (!handler.isEnabled()) {\n        continue;\n      }\n      let data: IHandlerResult;\n      if (this.blockedByActive(activeHandlers, allowed, handlerName)) {\n        handler.reset();\n      } else {\n        const handerName = eventName || e.type;\n        // @ts-ignore\n        if (handler && handler[handerName]) {\n          // @ts-ignore\n          data = handler[handerName](e, points, mapTouches);\n          this.mergeIHandlerResult(\n            mergedIHandlerResult,\n            eventsInProgress,\n            data,\n            handlerName,\n            inputEvent,\n          );\n          if (data && data.needsRenderFrame) {\n            this.triggerRenderFrame();\n          }\n        }\n      }\n      // @ts-ignore\n      if (data || handler.isActive()) {\n        activeHandlers[handlerName] = handler;\n      }\n    }\n\n    const deactivatedHandlers: { [key: string]: any } = {};\n    for (const name in this.previousActiveHandlers) {\n      if (!activeHandlers[name]) {\n        deactivatedHandlers[name] = inputEvent;\n      }\n    }\n    this.previousActiveHandlers = activeHandlers;\n    if (\n      Object.keys(deactivatedHandlers).length ||\n      hasChange(mergedIHandlerResult)\n    ) {\n      this.changes.push([\n        mergedIHandlerResult,\n        eventsInProgress,\n        deactivatedHandlers,\n      ]);\n      this.triggerRenderFrame();\n    }\n\n    if (Object.keys(activeHandlers).length || hasChange(mergedIHandlerResult)) {\n      this.map.stop(true);\n    }\n\n    this.updatingCamera = false;\n\n    const { cameraAnimation } = mergedIHandlerResult;\n    if (cameraAnimation) {\n      this.inertia.clear();\n      this.fireEvents({}, {});\n      this.changes = [];\n      cameraAnimation(this.map);\n    }\n  };\n\n  public mergeIHandlerResult(\n    mergedIHandlerResult: IHandlerResult,\n    eventsInProgress: { [key: string]: any },\n    HandlerResult: IHandlerResult,\n    name: string,\n    e?: InputEvent,\n  ) {\n    if (!HandlerResult) {\n      return;\n    }\n\n    merge(mergedIHandlerResult, HandlerResult);\n\n    const eventData = {\n      handlerName: name,\n      originalEvent: HandlerResult.originalEvent || e,\n    };\n\n    // track which handler changed which camera property\n    if (HandlerResult.zoomDelta !== undefined) {\n      eventsInProgress.zoom = eventData;\n    }\n    if (HandlerResult.panDelta !== undefined) {\n      eventsInProgress.drag = eventData;\n    }\n    if (HandlerResult.pitchDelta !== undefined) {\n      eventsInProgress.pitch = eventData;\n    }\n    if (HandlerResult.bearingDelta !== undefined) {\n      eventsInProgress.rotate = eventData;\n    }\n  }\n\n  public triggerRenderFrame() {\n    if (this.frameId === undefined) {\n      this.frameId = this.map.requestRenderFrame((timeStamp: number) => {\n        delete this.frameId;\n        this.handleEvent(new RenderFrameEvent('renderFrame', { timeStamp }));\n        this.applyChanges();\n      });\n    }\n  }\n\n  private addDefaultHandlers(options: IHandlerOptions) {\n    const map = this.map;\n    const el = map.getCanvasContainer();\n    this.add('mapEvent', new MapEventHandler(map, options));\n\n    const boxZoom = (map.boxZoom = new BoxZoomHandler(map, options));\n    this.add('boxZoom', boxZoom);\n\n    const tapZoom = new TapZoomHandler();\n    const clickZoom = new ClickZoomHandler();\n    map.doubleClickZoom = new DoubleClickZoomHandler(clickZoom, tapZoom);\n    this.add('tapZoom', tapZoom);\n    this.add('clickZoom', clickZoom);\n\n    const tapDragZoom = new TapDragZoomHandler();\n    this.add('tapDragZoom', tapDragZoom);\n\n    const touchPitch = (map.touchPitch = new TouchPitchHandler());\n    this.add('touchPitch', touchPitch);\n\n    const mouseRotate = new MouseRotateHandler(options);\n    const mousePitch = new MousePitchHandler(options);\n    map.dragRotate = new DragRotateHandler(options, mouseRotate, mousePitch);\n    this.add('mouseRotate', mouseRotate, ['mousePitch']);\n    this.add('mousePitch', mousePitch, ['mouseRotate']);\n\n    const mousePan = new MousePanHandler(options);\n    const touchPan = new TouchPanHandler(options);\n    map.dragPan = new DragPanHandler(el, mousePan, touchPan);\n    this.add('mousePan', mousePan);\n    this.add('touchPan', touchPan, ['touchZoom', 'touchRotate']);\n\n    const touchRotate = new TouchRotateHandler();\n    const touchZoom = new TouchZoomHandler();\n    map.touchZoomRotate = new TouchZoomRotateHandler(\n      el,\n      touchZoom,\n      touchRotate,\n      tapDragZoom,\n    );\n    this.add('touchRotate', touchRotate, ['touchPan', 'touchZoom']);\n    this.add('touchZoom', touchZoom, ['touchPan', 'touchRotate']);\n\n    const scrollZoom = (map.scrollZoom = new ScrollZoomHandler(map, this));\n    this.add('scrollZoom', scrollZoom, ['mousePan']);\n\n    const keyboard = (map.keyboard = new KeyboardHandler());\n    this.add('keyboard', keyboard);\n\n    this.add('blockableMapEvent', new BlockableMapEventHandler(map));\n\n    for (const name of [\n      'boxZoom',\n      'doubleClickZoom',\n      'tapDragZoom',\n      'touchPitch',\n      'dragRotate',\n      'dragPan',\n      'touchZoomRotate',\n      'scrollZoom',\n      'keyboard',\n    ]) {\n      // @ts-ignore\n      if (options.interactive && options[name]) {\n        // @ts-ignore\n        map[name].enable(options[name]);\n      }\n    }\n  }\n\n  private add(handlerName: string, handler: IHandler, allowed?: string[]) {\n    this.handlers.push({ handlerName, handler, allowed });\n    this.handlersById[handlerName] = handler;\n  }\n\n  private blockedByActive(\n    activeHandlers: { [key: string]: IHandler },\n    allowed: string[],\n    myName: string,\n  ) {\n    for (const name in activeHandlers) {\n      if (name === myName) {\n        continue;\n      }\n      if (!allowed || allowed.indexOf(name) < 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getMapTouches(touches: Touch[]): Touch[] {\n    const mapTouches = [];\n    for (const t of touches) {\n      const target = t.target as Node;\n      if (this.el.contains(target)) {\n        mapTouches.push(t);\n      }\n    }\n    return mapTouches;\n  }\n\n  private applyChanges() {\n    const combined: { [key: string]: any } = {};\n    const combinedEventsInProgress = {};\n    const combinedDeactivatedHandlers = {};\n\n    for (const [change, eventsInProgress, deactivatedHandlers] of this\n      .changes) {\n      if (change.panDelta) {\n        combined.panDelta = (combined.panDelta || new Point(0, 0))._add(\n          change.panDelta,\n        );\n      }\n      if (change.zoomDelta) {\n        combined.zoomDelta = (combined.zoomDelta || 0) + change.zoomDelta;\n      }\n      if (change.bearingDelta) {\n        combined.bearingDelta =\n          (combined.bearingDelta || 0) + change.bearingDelta;\n      }\n      if (change.pitchDelta) {\n        combined.pitchDelta = (combined.pitchDelta || 0) + change.pitchDelta;\n      }\n      if (change.around !== undefined) {\n        combined.around = change.around;\n      }\n      if (change.pinchAround !== undefined) {\n        combined.pinchAround = change.pinchAround;\n      }\n      if (change.noInertia) {\n        combined.noInertia = change.noInertia;\n      }\n\n      merge(combinedEventsInProgress, eventsInProgress);\n      merge(combinedDeactivatedHandlers, deactivatedHandlers);\n    }\n\n    this.updateMapTransform(\n      combined,\n      combinedEventsInProgress,\n      combinedDeactivatedHandlers,\n    );\n    this.changes = [];\n  }\n\n  private updateMapTransform(\n    combinedResult: any,\n    combinedEventsInProgress: any,\n    deactivatedHandlers: any,\n  ) {\n    const map = this.map;\n    const tr = map.transform;\n\n    if (!hasChange(combinedResult)) {\n      return this.fireEvents(combinedEventsInProgress, deactivatedHandlers);\n    }\n    const {\n      panDelta,\n      zoomDelta,\n      bearingDelta,\n      pitchDelta,\n      pinchAround,\n    } = combinedResult;\n    let { around } = combinedResult;\n\n    if (pinchAround !== undefined) {\n      around = pinchAround;\n    }\n\n    // stop any ongoing camera animations (easeTo, flyTo)\n    map.stop(true);\n\n    around = around || map.transform.centerPoint;\n    const loc = tr.pointLocation(panDelta ? around.sub(panDelta) : around);\n    if (bearingDelta) {\n      tr.bearing += bearingDelta;\n    }\n    if (pitchDelta) {\n      tr.pitch += pitchDelta;\n    }\n    if (zoomDelta) {\n      tr.zoom += zoomDelta;\n    }\n    tr.setLocationAtPoint(loc, around);\n\n    this.map.update();\n    if (!combinedResult.noInertia) {\n      this.inertia.record(combinedResult);\n    }\n    this.fireEvents(combinedEventsInProgress, deactivatedHandlers);\n  }\n\n  private fireEvents(\n    newEventsInProgress: { [key: string]: any },\n    deactivatedHandlers: { [key: string]: any },\n  ) {\n    const wasMoving = isMoving(this.eventsInProgress);\n    const nowMoving = isMoving(newEventsInProgress);\n\n    const startEvents: { [key: string]: any } = {};\n\n    for (const eventName in newEventsInProgress) {\n      if (newEventsInProgress[eventName]) {\n        const { originalEvent } = newEventsInProgress[eventName];\n        if (!this.eventsInProgress[eventName]) {\n          startEvents[`${eventName}start`] = originalEvent;\n        }\n\n        this.eventsInProgress[eventName] = newEventsInProgress[eventName];\n      }\n    }\n\n    // fire start events only after this.eventsInProgress has been updated\n    if (!wasMoving && nowMoving) {\n      this.fireEvent('movestart', nowMoving.originalEvent);\n    }\n\n    for (const name in startEvents) {\n      if (startEvents[name]) {\n        this.fireEvent(name, startEvents[name]);\n      }\n    }\n\n    if (newEventsInProgress.rotate) {\n      this.bearingChanged = true;\n    }\n\n    if (nowMoving) {\n      this.fireEvent('move', nowMoving.originalEvent);\n    }\n\n    for (const eventName in newEventsInProgress) {\n      if (newEventsInProgress[eventName]) {\n        const { originalEvent } = newEventsInProgress[eventName];\n        this.fireEvent(eventName, originalEvent);\n      }\n    }\n\n    const endEvents: { [key: string]: any } = {};\n\n    let originalEndEvent;\n    for (const eventName in this.eventsInProgress) {\n      if (this.eventsInProgress[eventName]) {\n        const { handlerName, originalEvent } = this.eventsInProgress[eventName];\n        if (!this.handlersById[handlerName].isActive()) {\n          delete this.eventsInProgress[eventName];\n          originalEndEvent = deactivatedHandlers[handlerName] || originalEvent;\n          endEvents[`${eventName}end`] = originalEndEvent;\n        }\n      }\n    }\n\n    for (const name in endEvents) {\n      if (endEvents[name]) {\n        this.fireEvent(name, endEvents[name]);\n      }\n    }\n\n    const stillMoving = isMoving(this.eventsInProgress);\n    if ((wasMoving || nowMoving) && !stillMoving) {\n      this.updatingCamera = true;\n      const inertialEase = this.inertia.onMoveEnd(\n        this.map.dragPan.inertiaOptions,\n      );\n\n      const shouldSnapToNorth = (bearing: number) =>\n        bearing !== 0 &&\n        -this.bearingSnap < bearing &&\n        bearing < this.bearingSnap;\n\n      if (inertialEase) {\n        if (shouldSnapToNorth(inertialEase.bearing || this.map.getBearing())) {\n          inertialEase.bearing = 0;\n        }\n        this.map.easeTo(inertialEase, { originalEvent: originalEndEvent });\n      } else {\n        this.map.emit(\n          'moveend',\n          new Event('moveend', { originalEvent: originalEndEvent }),\n        );\n        if (shouldSnapToNorth(this.map.getBearing())) {\n          this.map.resetNorth();\n        }\n      }\n      this.bearingChanged = false;\n      this.updatingCamera = false;\n    }\n  }\n\n  private fireEvent(type: string, e: any) {\n    this.map.emit(type, new Event(type, e ? { originalEvent: e } : {}));\n  }\n}\n\nexport default HandlerManager;\n"],"file":"handler_manager.js"}