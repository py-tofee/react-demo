{"version":3,"sources":["../src/map.ts"],"names":["DOM","Camera","LngLat","LngLatBounds","Point","HandlerManager","Hash","renderframe","PerformanceUtils","TaskQueue","defaultMinZoom","defaultMaxZoom","defaultMinPitch","defaultMaxPitch","DefaultOptions","hash","zoom","center","pitch","bearing","interactive","minZoom","maxZoom","minPitch","maxPitch","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","bearingSnap","clickTolerance","pitchWithRotate","trackResize","renderWorldCopies","Map","options","update","event","resize","originalEvent","initContainer","handlers","window","addEventListener","onWindowOnline","onWindowResize","hashName","undefined","addTo","onHashChange","jumpTo","bounds","fitBounds","fitBoundsOptions","duration","eventData","dimensions","containerDimensions","width","height","transform","fireMoving","moving","stop","emit","Event","container","canvas","canvasContainer","lngLat","locationPoint","convert","point","pointLocation","getBounds","getMaxBounds","setMaxBounds","style","getZoom","setZoom","Error","getPitch","setPitch","frame","cancel","renderTaskQueue","clear","cb","add","id","remove","paintStartTimeStamp","time","run","document","getElementById","HTMLElement","classList","create","clientWidth","clientHeight","pixelRatio","DPR"],"mappings":"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","sourcesContent":["import { DOM } from '@antv/l7-utils';\nimport { merge } from 'lodash';\nimport Camera from './camera';\nimport './css/l7.css';\nimport LngLat, { LngLatLike } from './geo/lng_lat';\nimport LngLatBounds, { LngLatBoundsLike } from './geo/lng_lat_bounds';\n// @ts-ignore\nimport Point, { PointLike } from './geo/point';\nimport BoxZoomHandler from './handler/box_zoom';\nimport HandlerManager from './handler/handler_manager';\nimport KeyboardHandler from './handler/keyboard';\n\nimport ScrollZoomHandler from './handler/scroll_zoom';\nimport DoubleClickZoomHandler from './handler/shim/dblclick_zoom';\nimport DragPanHandler from './handler/shim/drag_pan';\nimport DragRotateHandler from './handler/shim/drag_rotate';\nimport TouchZoomRotateHandler from './handler/shim/touch_zoom_rotate';\nimport { TouchPitchHandler } from './handler/touch';\nimport Hash from './hash';\nimport { IMapOptions } from './interface';\nimport { renderframe } from './util';\nimport { PerformanceUtils } from './utils/performance';\nimport TaskQueue, { TaskID } from './utils/task_queue';\ntype CallBack = (_: number) => void;\nconst defaultMinZoom = -2;\nconst defaultMaxZoom = 22;\n\n// the default values, but also the valid range\nconst defaultMinPitch = 0;\nconst defaultMaxPitch = 60;\n\nconst DefaultOptions: IMapOptions = {\n  hash: false,\n  zoom: -1,\n  center: [112, 32],\n  pitch: 0,\n  bearing: 0,\n  interactive: true,\n  minZoom: defaultMinZoom,\n  maxZoom: defaultMaxZoom,\n  minPitch: defaultMinPitch,\n  maxPitch: defaultMaxPitch,\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  bearingSnap: 7,\n  clickTolerance: 3,\n  pitchWithRotate: true,\n  trackResize: true,\n  renderWorldCopies: true,\n};\nexport class Map extends Camera {\n  public doubleClickZoom: DoubleClickZoomHandler;\n  public dragRotate: DragRotateHandler;\n  public dragPan: DragPanHandler;\n  public touchZoomRotate: TouchZoomRotateHandler;\n  public scrollZoom: ScrollZoomHandler;\n  public keyboard: KeyboardHandler;\n  public touchPitch: TouchPitchHandler;\n  public boxZoom: BoxZoomHandler;\n  public handlers: HandlerManager;\n\n  private container: HTMLElement;\n  private canvas: HTMLCanvasElement;\n  private canvasContainer: HTMLElement;\n  private renderTaskQueue: TaskQueue = new TaskQueue();\n  private frame: { cancel: () => void } | null;\n  private trackResize: boolean = true;\n  private hash: Hash | undefined;\n  constructor(options: Partial<IMapOptions>) {\n    super(merge({}, DefaultOptions, options));\n    this.initContainer();\n    this.resize();\n    this.handlers = new HandlerManager(this, this.options);\n    // this.on('move', () => this.update());\n    // this.on('moveend', () => this.update());\n    // this.on('zoom', () => {\n    //   console.log('zoom');\n    // });\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', this.onWindowOnline, false);\n      window.addEventListener('resize', this.onWindowResize, false);\n      window.addEventListener('orientationchange', this.onWindowResize, false);\n    }\n\n    const hashName =\n      (typeof options.hash === 'string' && options.hash) || undefined;\n    if (options.hash) {\n      this.hash = new Hash(hashName).addTo(this) as Hash;\n    }\n\n    // don't set position from options if set through hash\n    if (!this.hash || !this.hash.onHashChange()) {\n      this.jumpTo({\n        center: options.center,\n        zoom: options.zoom,\n        bearing: options.bearing,\n        pitch: options.pitch,\n      });\n\n      if (options.bounds) {\n        this.resize();\n        this.fitBounds(\n          options.bounds,\n          merge({}, options.fitBoundsOptions, { duration: 0 }),\n        );\n      }\n    }\n  }\n\n  public resize(eventData?: any) {\n    const dimensions = this.containerDimensions();\n    const width = dimensions[0];\n    const height = dimensions[1];\n\n    // this.resizeCanvas(width, height);\n    this.transform.resize(width, height);\n    const fireMoving = !this.moving;\n    if (fireMoving) {\n      this.stop();\n      this.emit('movestart', new Event('movestart', eventData));\n      this.emit('move', new Event('move', eventData));\n    }\n\n    this.emit('resize', new Event('resize', eventData));\n\n    if (fireMoving) {\n      this.emit('moveend', new Event('moveend', eventData));\n    }\n\n    return this;\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public getCanvas() {\n    return this.canvas;\n  }\n\n  public getCanvasContainer() {\n    return this.canvasContainer;\n  }\n\n  public project(lngLat: LngLatLike) {\n    return this.transform.locationPoint(LngLat.convert(lngLat));\n  }\n\n  public unproject(point: PointLike) {\n    return this.transform.pointLocation(Point.convert(point));\n  }\n\n  public getBounds(): LngLatBounds {\n    return this.transform.getBounds();\n  }\n\n  public getMaxBounds(): LngLatBounds | null {\n    return this.transform.getMaxBounds();\n  }\n\n  public setMaxBounds(bounds: LngLatBoundsLike) {\n    this.transform.setMaxBounds(LngLatBounds.convert(bounds));\n  }\n\n  public setStyle(style: any) {\n    return;\n  }\n  public setMinZoom(minZoom?: number) {\n    minZoom =\n      minZoom === null || minZoom === undefined ? defaultMinZoom : minZoom;\n    if (minZoom >= defaultMinZoom && minZoom <= this.transform.maxZoom) {\n      this.transform.minZoom = minZoom;\n      if (this.getZoom() < minZoom) {\n        this.setZoom(minZoom);\n      }\n\n      return this;\n    } else {\n      throw new Error(\n        `minZoom must be between ${defaultMinZoom} and the current maxZoom, inclusive`,\n      );\n    }\n  }\n\n  public getMinZoom() {\n    return this.transform.minZoom;\n  }\n\n  public setMaxZoom(maxZoom?: number) {\n    maxZoom =\n      maxZoom === null || maxZoom === undefined ? defaultMaxZoom : maxZoom;\n\n    if (maxZoom >= this.transform.minZoom) {\n      this.transform.maxZoom = maxZoom;\n      if (this.getZoom() > maxZoom) {\n        this.setZoom(maxZoom);\n      }\n\n      return this;\n    } else {\n      throw new Error('maxZoom must be greater than the current minZoom');\n    }\n  }\n  public getMaxZoom() {\n    return this.transform.maxZoom;\n  }\n\n  public setMinPitch(minPitch?: number) {\n    minPitch =\n      minPitch === null || minPitch === undefined ? defaultMinPitch : minPitch;\n\n    if (minPitch < defaultMinPitch) {\n      throw new Error(\n        `minPitch must be greater than or equal to ${defaultMinPitch}`,\n      );\n    }\n\n    if (minPitch >= defaultMinPitch && minPitch <= this.transform.maxPitch) {\n      this.transform.minPitch = minPitch;\n      if (this.getPitch() < minPitch) {\n        this.setPitch(minPitch);\n      }\n\n      return this;\n    } else {\n      throw new Error(\n        `minPitch must be between ${defaultMinPitch} and the current maxPitch, inclusive`,\n      );\n    }\n  }\n\n  public getMinPitch() {\n    return this.transform.minPitch;\n  }\n\n  public setMaxPitch(maxPitch?: number) {\n    maxPitch =\n      maxPitch === null || maxPitch === undefined ? defaultMaxPitch : maxPitch;\n\n    if (maxPitch > defaultMaxPitch) {\n      throw new Error(\n        `maxPitch must be less than or equal to ${defaultMaxPitch}`,\n      );\n    }\n\n    if (maxPitch >= this.transform.minPitch) {\n      this.transform.maxPitch = maxPitch;\n      if (this.getPitch() > maxPitch) {\n        this.setPitch(maxPitch);\n      }\n\n      return this;\n    } else {\n      throw new Error('maxPitch must be greater than the current minPitch');\n    }\n  }\n\n  public getMaxPitch() {\n    return this.transform.maxPitch;\n  }\n\n  public getRenderWorldCopies() {\n    return this.transform.renderWorldCopies;\n  }\n\n  public setRenderWorldCopies(renderWorldCopies?: boolean) {\n    this.transform.renderWorldCopies = !!renderWorldCopies;\n  }\n\n  public remove() {\n    if (this.frame) {\n      this.frame.cancel();\n      this.frame = null;\n    }\n    this.renderTaskQueue.clear();\n  }\n\n  public requestRenderFrame(cb: CallBack): TaskID {\n    this.update();\n    return this.renderTaskQueue.add(cb);\n  }\n\n  public cancelRenderFrame(id: TaskID) {\n    return this.renderTaskQueue.remove(id);\n  }\n\n  public triggerRepaint() {\n    if (!this.frame) {\n      this.frame = renderframe((paintStartTimeStamp: number) => {\n        PerformanceUtils.frame(paintStartTimeStamp);\n        this.frame = null;\n        this.update(paintStartTimeStamp);\n      });\n    }\n  }\n\n  public update(time?: number) {\n    if (!this.frame) {\n      this.frame = renderframe((paintStartTimeStamp: number) => {\n        PerformanceUtils.frame(paintStartTimeStamp);\n        this.frame = null;\n        this.renderTaskQueue.run(time);\n      });\n    }\n  }\n\n  private initContainer() {\n    if (typeof this.options.container === 'string') {\n      this.container = window.document.getElementById(\n        this.options.container,\n      ) as HTMLElement;\n      if (!this.container) {\n        throw new Error(`Container '${this.options.container}' not found.`);\n      }\n    } else if (this.options.container instanceof HTMLElement) {\n      this.container = this.options.container;\n    } else {\n      throw new Error(\n        \"Invalid type: 'container' must be a String or HTMLElement.\",\n      );\n    }\n\n    const container = this.container;\n    container.classList.add('l7-map');\n\n    const canvasContainer = (this.canvasContainer = DOM.create(\n      'div',\n      'l7-canvas-container',\n      container,\n    ));\n    if (this.options.interactive) {\n      canvasContainer.classList.add('l7-interactive');\n    }\n\n    // this.canvas = DOM.create(\n    //   'canvas',\n    //   'l7-canvas',\n    //   canvasContainer,\n    // ) as HTMLCanvasElement;\n    // this.canvas.setAttribute('tabindex', '-');\n    // this.canvas.setAttribute('aria-label', 'Map');\n  }\n\n  private containerDimensions(): [number, number] {\n    let width = 0;\n    let height = 0;\n    if (this.container) {\n      width = this.container.clientWidth || 400;\n      height = this.container.clientHeight || 300;\n    }\n    return [width, height];\n  }\n\n  private resizeCanvas(width: number, height: number) {\n    const pixelRatio = DOM.DPR || 1;\n    this.canvas.width = pixelRatio * width;\n    this.canvas.height = pixelRatio * height;\n\n    // Maintain the same canvas size, potentially downscaling it for HiDPI displays\n    this.canvas.style.width = `${width}px`;\n    this.canvas.style.height = `${height}px`;\n  }\n\n  private onWindowOnline = () => {\n    this.update();\n  };\n\n  private onWindowResize = (event: Event) => {\n    if (this.trackResize) {\n      this.resize({ originalEvent: event }).update();\n    }\n  };\n}\n"],"file":"map.js"}