import { ReactNode } from 'react';
import { Base as G2PlotBase, PlotConfig as G2PlotPlotConfig, Tooltip as G2PlotTooltip, CustomTooltipConfig, TooltipCfg } from '@antv/g2plot';
export interface Tooltip extends Omit<G2PlotTooltip, 'custom'> {
    custom?: {
        container?: ReactNode;
        customContent?: (title: string, data: any[]) => ReactNode | string | void;
        onChange?: (tooltipDom: HTMLElement, cfg: CustomTooltipConfig) => void;
    };
}
export declare type SpecialTooltip = {
    visible: boolean;
} & TooltipCfg;
export interface PlotConfig extends G2PlotPlotConfig {
    memoData?: string | number | any[];
    tooltip?: Tooltip | SpecialTooltip;
    data?: any;
    onlyChangeData?: boolean;
}
export interface Base extends G2PlotBase {
    __proto__?: any;
}
export default function useInit<T extends Base, U extends PlotConfig>(ChartClass: any, config: U): {
    chart: import("react").MutableRefObject<T | undefined>;
    container: import("react").RefObject<HTMLDivElement>;
    toDataURL: (type?: string, encoderOptions?: number | undefined) => any;
    downloadImage: (name: string, type?: string, encoderOptions?: number | undefined) => void;
};
