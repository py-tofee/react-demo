/**
 * 下划线转驼峰命名
 */
export var camelCase = function camelCase(name) {
  return name.charAt(0).toUpperCase() + name.slice(1).replace(/-(\w)/g, function (_, n) {
    return n.toUpperCase();
  });
};
/**
 * 获取对象差异
 * @param {source} object 原始对象
 * @param {target} object 目标对象
 */

export var checkChanged = function checkChanged(source, target) {
  return JSON.stringify(source) === JSON.stringify(target);
};
/**
 * 判断两数组是否完全相同
 * @param {source} [] 原数组
 * @param {target} [] 目标数组
 */

export var sameArray = function sameArray(source, target) {
  return new Set(source.concat(target)).size === source.length;
};
export var isType = function isType(value, type) {
  var toString = {}.toString;
  return toString.call(value) === '[object ' + type + ']';
};
export var clone = function clone(source) {
  if (!source) {
    return source;
  }

  var target = {};

  for (var k in source) {
    target[k] = source[k];
  }

  return target;
};