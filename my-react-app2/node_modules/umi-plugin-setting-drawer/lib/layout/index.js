"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _umi = require("umi");

var _proLayout = require("@ant-design/pro-layout");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var BasicLayout = function BasicLayout(props) {
  var children = props.children;
  var initialInfo = _umi.useModel ? (0, _umi.useModel)('@@initialState') : undefined;

  if (!initialInfo) {
    return children;
  }

  var initialState = initialInfo.initialState,
      setInitialState = initialInfo.setInitialState;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children, /*#__PURE__*/_react.default.createElement(_proLayout.SettingDrawer, _extends({}, initialState === null || initialState === void 0 ? void 0 : initialState.settingDrawer, {
    settings: initialState === null || initialState === void 0 ? void 0 : initialState.settings,
    onSettingChange: function onSettingChange(settings) {
      setInitialState(_objectSpread(_objectSpread({}, initialState), {}, {
        settings: settings
      }));
    }
  })));
};

var _default = BasicLayout;
exports.default = _default;