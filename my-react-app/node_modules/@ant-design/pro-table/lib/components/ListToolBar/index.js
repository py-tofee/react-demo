"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _antd = require("antd");

var _proProvider = require("@ant-design/pro-provider");

var _classnames = _interopRequireDefault(require("classnames"));

var _proUtils = require("@ant-design/pro-utils");

var _HeaderMenu = _interopRequireDefault(require("./HeaderMenu"));

require("./index.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * 获取配置区域 DOM Item
 *
 * @param setting 配置项
 */
function getSettingItem(setting) {
  if ( /*#__PURE__*/_react.default.isValidElement(setting)) {
    return setting;
  }

  if (setting) {
    var settingConfig = setting;
    var icon = settingConfig.icon,
        tooltip = settingConfig.tooltip,
        _onClick = settingConfig.onClick,
        key = settingConfig.key;

    if (icon && tooltip) {
      return /*#__PURE__*/_react.default.createElement(_antd.Tooltip, {
        title: tooltip
      }, /*#__PURE__*/_react.default.createElement("span", {
        key: key,
        onClick: function onClick() {
          if (_onClick) {
            _onClick(key);
          }
        }
      }, icon));
    }

    return icon;
  }

  return null;
}

var ListToolBarTabBar = function ListToolBarTabBar(_ref) {
  var prefixCls = _ref.prefixCls,
      _ref$tabs = _ref.tabs,
      tabs = _ref$tabs === void 0 ? {} : _ref$tabs,
      multipleLine = _ref.multipleLine,
      filtersNode = _ref.filtersNode;
  if (!multipleLine) return null;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-extra-line")
  }, tabs.items && tabs.items.length ? /*#__PURE__*/_react.default.createElement(_antd.Tabs, {
    activeKey: tabs.activeKey,
    onChange: tabs.onChange,
    tabBarExtraContent: filtersNode
  }, tabs.items.map(function (tab, index) {
    return /*#__PURE__*/_react.default.createElement(_antd.Tabs.TabPane, _extends({
      key: tab.key || index
    }, tab));
  })) : filtersNode);
};

var ListToolBar = function ListToolBar(_ref2) {
  var customizePrefixCls = _ref2.prefixCls,
      title = _ref2.title,
      subTitle = _ref2.subTitle,
      tooltip = _ref2.tooltip,
      className = _ref2.className,
      style = _ref2.style,
      search = _ref2.search,
      _onSearch = _ref2.onSearch,
      _ref2$multipleLine = _ref2.multipleLine,
      multipleLine = _ref2$multipleLine === void 0 ? false : _ref2$multipleLine,
      filter = _ref2.filter,
      _ref2$actions = _ref2.actions,
      actions = _ref2$actions === void 0 ? [] : _ref2$actions,
      _ref2$settings = _ref2.settings,
      settings = _ref2$settings === void 0 ? [] : _ref2$settings,
      _ref2$tabs = _ref2.tabs,
      tabs = _ref2$tabs === void 0 ? {} : _ref2$tabs,
      menu = _ref2.menu;
  var intl = (0, _proProvider.useIntl)();
  var placeholder = intl.getMessage('tableForm.inputPlaceholder', '请输入');
  /**
   * 获取搜索栏 DOM
   *
   * @param search 搜索框相关配置
   */

  var searchNode = (0, _react.useMemo)(function () {
    if (!search) {
      return null;
    }

    if ( /*#__PURE__*/_react.default.isValidElement(search)) {
      return search;
    }

    return /*#__PURE__*/_react.default.createElement(_antd.Input.Search, _extends({
      style: {
        width: 200
      },
      placeholder: placeholder
    }, search, {
      onSearch: function onSearch() {
        var _search$onSearch;

        for (var _len = arguments.length, restParams = new Array(_len), _key = 0; _key < _len; _key++) {
          restParams[_key] = arguments[_key];
        }

        _onSearch === null || _onSearch === void 0 ? void 0 : _onSearch(restParams === null || restParams === void 0 ? void 0 : restParams[0]);
        (_search$onSearch = search.onSearch) === null || _search$onSearch === void 0 ? void 0 : _search$onSearch.call.apply(_search$onSearch, [search].concat(restParams));
      }
    }));
  }, [placeholder, _onSearch, search]);

  var _useContext = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('pro-table-list-toolbar', customizePrefixCls);
  /** 轻量筛选组件 */

  var filtersNode = (0, _react.useMemo)(function () {
    if (filter) return /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "-filter")
    }, filter);
    return null;
  }, [filter, prefixCls]);
  /** 有没有 title，需要结合多个场景判断 */

  var hasTitle = (0, _react.useMemo)(function () {
    return menu || title || subTitle || tooltip;
  }, [menu, subTitle, title, tooltip]);
  /** 没有 key 的时候帮忙加一下 key 不加的话很烦人 */

  var actionDom = (0, _react.useMemo)(function () {
    if (!Array.isArray(actions)) {
      return actions;
    }

    if (actions.length < 1) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_antd.Space, {
      align: "center"
    }, actions.map(function (action, index) {
      if (! /*#__PURE__*/_react.default.isValidElement(action)) {
        // eslint-disable-next-line react/no-array-index-key
        return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
          key: index
        }, action);
      }

      return /*#__PURE__*/_react.default.cloneElement(action, _objectSpread({
        // eslint-disable-next-line react/no-array-index-key
        key: index
      }, action === null || action === void 0 ? void 0 : action.props));
    }));
  }, [actions]);
  var hasRight = (0, _react.useMemo)(function () {
    return hasTitle && searchNode || !multipleLine && filtersNode || actionDom || (settings === null || settings === void 0 ? void 0 : settings.length);
  }, [actionDom, filtersNode, hasTitle, multipleLine, searchNode, settings === null || settings === void 0 ? void 0 : settings.length]);
  var hasLeft = (0, _react.useMemo)(function () {
    return tooltip || title || subTitle || menu || !hasTitle && searchNode;
  }, [hasTitle, menu, searchNode, subTitle, title, tooltip]);
  var leftTitleDom = (0, _react.useMemo)(function () {
    if (!hasLeft && hasRight) {
      return /*#__PURE__*/_react.default.createElement("div", {
        className: "".concat(prefixCls, "-left")
      });
    }

    return /*#__PURE__*/_react.default.createElement(_antd.Space, {
      className: "".concat(prefixCls, "-left")
    }, /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "-title")
    }, /*#__PURE__*/_react.default.createElement(_proUtils.LabelIconTip, {
      tooltip: tooltip,
      label: title,
      subTitle: subTitle
    })), menu && /*#__PURE__*/_react.default.createElement(_HeaderMenu.default, _extends({}, menu, {
      prefixCls: prefixCls
    })), !hasTitle && searchNode && /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "-search")
    }, searchNode));
  }, [hasLeft, hasRight, hasTitle, menu, prefixCls, searchNode, subTitle, title, tooltip]);
  var rightTitleDom = (0, _react.useMemo)(function () {
    if (!hasRight) return null;
    return /*#__PURE__*/_react.default.createElement(_antd.Space, {
      className: "".concat(prefixCls, "-right"),
      size: 16
    }, hasTitle && searchNode ? /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "-search")
    }, searchNode) : null, !multipleLine ? filtersNode : null, actionDom, (settings === null || settings === void 0 ? void 0 : settings.length) ? /*#__PURE__*/_react.default.createElement(_antd.Space, {
      size: 12,
      align: "center",
      className: "".concat(prefixCls, "-setting-items")
    }, settings.map(function (setting, index) {
      var settingItem = getSettingItem(setting);
      return (
        /*#__PURE__*/
        // eslint-disable-next-line react/no-array-index-key
        _react.default.createElement("div", {
          key: index,
          className: "".concat(prefixCls, "-setting-item")
        }, settingItem)
      );
    })) : null);
  }, [actionDom, filtersNode, hasRight, hasTitle, multipleLine, prefixCls, searchNode, settings]);
  var titleNode = (0, _react.useMemo)(function () {
    if (!hasRight && !hasLeft) return null;
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "".concat(prefixCls, "-container")
    }, leftTitleDom, rightTitleDom);
  }, [hasLeft, hasRight, leftTitleDom, prefixCls, rightTitleDom]);
  return /*#__PURE__*/_react.default.createElement("div", {
    style: style,
    className: (0, _classnames.default)("".concat(prefixCls), className)
  }, titleNode, /*#__PURE__*/_react.default.createElement(ListToolBarTabBar, {
    filtersNode: filtersNode,
    prefixCls: prefixCls,
    tabs: tabs,
    multipleLine: multipleLine
  }));
};

var _default = ListToolBar;
exports.default = _default;